useDynLib(PwrGSD, .registration = TRUE)
importFrom(survival, Surv)

importFrom("grDevices", "col2rgb", "gray")
importFrom("graphics", "axis", "box", "co.intervals", "grid", "lines",
           "mtext", "par", "plot", "plot.new", "plot.window", "points",
           "polygon", "rect", "text")
importFrom("stats", "approx", "is.empty.model", "model.extract",
           "model.frame", "model.matrix", "na.fail", "na.pass",
           "optim", "optimize", "pnorm", "qnorm", "quantile", "rnorm",
           "update", "var")

export("%,%",agghaz,as.boundaries,CDFOR2LRR,CondPower,CY2TOShaz,PwrGSD,cpd.PwrGSD,
       CRRtoRR,DX,Elements,EX1gXK,gsd.dens,GrpSeqBnds,Haybittle,IntSurvDiff,LanDemets,
       lookup,mystack,mysurvfit,ObrienFleming,Pocock,Pow,RR2RCM,RCM2RR,
       SC,SCtoBdry,SimGSB,Power,wtdlogrank)



S3method(print, PwrGSD)
S3method(summary, PwrGSD)
S3method(as.boundaries, PwrGSD)
S3method(SimGSB, PwrGSD)

S3method(print, cpd.PwrGSD)
S3method(summary, cpd.PwrGSD)
S3method(plot, cpd.PwrGSD)
S3method(as.data.frame, cpd.PwrGSD)

S3method(print, SimPwrGSD)
S3method(summary, SimPwrGSD)

S3method(print, boundaries)
S3method(plot, boundaries)
S3method(as.data.frame, boundaries)
S3method(as.boundaries, boundaries)
S3method(SimGSB, boundaries)

S3method(print, survtest)
S3method(summary, survtest)

S3method(plot, blkdcp)
S3method(print, blkdcp)
S3method(summary, blkdcp)

S3method(print, boundary.construction.method)

S3method(print, spending.function)
